{"version":3,"sources":["../src/main.js"],"names":["LL_0","LL_1","LL_2","LL_3","LL_4","LL_5","logLevels","LL_ALL","LL_LOG","LL_INFO","LL_WARN","LL_ERROR","LL_NONE","config","timestamps","logLevel","orig","console","augmentedConsole","configure","configObj","level","timestamp","Object","values","includes","error","addTimestamps","set","whiteline","n","parseInt","i","log","debug","args","Date","toLocaleString","info","warn","k"],"mappings":"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","sourcesContent":["(function() {\n\t\"use strict\";\n\n\tconst LL_0 = 0;\n\tconst LL_1 = 1;\n\tconst LL_2 = 2;\n\tconst LL_3 = 3;\n\tconst LL_4 = 4;\n\tconst LL_5 = 5;\n\tconst logLevels = {\n\t\tLL_ALL: LL_0,\n\t\tLL_LOG: LL_1,\n\t\tLL_INFO: LL_2,\n\t\tLL_WARN: LL_3,\n\t\tLL_ERROR: LL_4,\n\t\tLL_NONE: LL_5,\n\t};\n\n\tlet config = {\n\t\ttimestamps: false,\n\t\tlogLevel: logLevels.LL_ALL,\n\t};\n\n\tlet orig = null;\n\n\tif ( console && typeof console === 'object' ) {\n\t\torig = {...console};\n\n\t\tconst augmentedConsole = {\n\t\t\t...logLevels,\n\n\t\t\t/**\n\t\t\t * Configure the console functions\n\t\t\t * @param {Object} configObj Object with the new configuration\n\t\t\t */\n\t\t\tconfigure: configObj => {\n\t\t\t\tif ( typeof configObj !== 'object' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( configObj.logLevel ) {\n\t\t\t\t\tconsole.logLevel(level);\n\t\t\t\t}\n\t\t\t\tif ( configObj.timestamp ) {\n\t\t\t\t\tconsole.timestamp(configObj.timestamp);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Set the log level of the function log, info, warn, error\n\t\t\t * @param {Number} level the new log level. Can be one of\n\t\t\t * console.LL_ALL, console.LL_WARN, console.LL_ERROR, or console.LL_NONE\n\t\t\t */\n\t\t\tlogLevel: level => {\n\t\t\t\tif ( !Object.values(logLevels).includes(level) ) {\n\t\t\t\t\t// Invalid value\n\t\t\t\t\tconsole.error('Invalid log level value');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconfig.logLevel = level;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Set adding timestamps to the log functions\n\t\t\t * @param {Boolean} set True to add timestamps to the logs,\n\t\t\t * or false to disable timestamps\n\t\t\t */\n\t\t\taddTimestamps: set => {\n\t\t\t\tif ( set !== !!set ) {\n\t\t\t\t\t// Invalid value\n\t\t\t\t\tconsole.error('Invalid argument for console.timestamp(). Boolean expected.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconfig.timestamps = set;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Write one or more whitelines to the console\n\t\t\t * @param {Number} n Number of whitelines to write\n\t\t\t */\n\t\t\twhiteline: (n) => {\n\t\t\t\tif ( typeof n !== 'number' || parseInt(n) !== n ) {\n\t\t\t\t\tn = 1;\n\t\t\t\t}\n\n\t\t\t\tfor ( let i=0; i<n; i++ ) {\n\t\t\t\t\torig.log('');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the debug function\n\t\t\t * @param  {...any} args the arguments passed to the log function\n\t\t\t */\n\t\t\tdebug: (...args) => {\n\t\t\t\tif ( config.logLevel >logLevels.LL_ALL ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.debug ? orig.debug(...args) : orig.log(...args);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the default log function\n\t\t\t * @param  {...any} args the arguments passed to the log function\n\t\t\t */\n\t\t\tlog: (...args) => {\n\t\t\t\tif ( config.logLevel > logLevels.LL_LOG ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.log(...args);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the info function\n\t\t\t * @param  {...any} args the arguments passed to the log function\n\t\t\t */\n\t\t\tinfo: (...args) => {\n\t\t\t\tif ( config.logLevel > logLevels.LL_INFO ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.info(...args);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the warn function\n\t\t\t * @param  {...any} args the arguments passed to the warn function\n\t\t\t */\n\t\t\twarn: (...args) => {\n\t\t\t\tif ( config.logLevel > logLevels.LL_WARN ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.warn(...args);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the error function\n\t\t\t * @param  {...any} args the arguments passed to the error function\n\t\t\t */\n\t\t\terror: (...args) => {\n\t\t\t\tif ( config.logLevel > logLevels.LL_ERROR ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.error(...args);\n\t\t\t},\n\t\t}\n\n\t\t// Overwrite the console object with our updates\n\t\tfor ( let k in augmentedConsole ) {\n\t\t\tconsole[k] = augmentedConsole[k];\n\t\t}\n\t}\n}());\n"],"file":"main.js"}