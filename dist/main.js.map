{"version":3,"sources":["../src/main.js"],"names":["LL_0","LL_ALL","LL_1","LL_LOG","LL_2","LL_INFO","LL_3","LL_WARN","LL_4","LL_ERROR","LL_5","LL_NONE","config","timestamps","logLevel","orig","console","augmentedConsole","configure","configObj","level","timestamp","some","l","error","addTimestamps","set","whiteline","n","parseInt","i","log","debug","args","Date","toLocaleString","info","warn","k"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAC,aAAW;AACX;;AAEA,MAAMA,IAAI,GAAG,CAAb;AACA,MAAMC,MAAM,GAAGD,IAAf;AACA,MAAME,IAAI,GAAG,CAAb;AACA,MAAMC,MAAM,GAAGD,IAAf;AACA,MAAME,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAGD,IAAhB;AACA,MAAME,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAGD,IAAhB;AACA,MAAME,IAAI,GAAG,CAAb;AACA,MAAMC,QAAQ,GAAGD,IAAjB;AACA,MAAME,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAGD,IAAhB;AAEA,MAAIE,MAAM,GAAG;AACZC,IAAAA,UAAU,EAAE,KADA;AAEZC,IAAAA,QAAQ,EAAEb;AAFE,GAAb;AAKA,MAAIc,IAAI,GAAG,IAAX;;AAEA,MAAKC,OAAO,IAAI,QAAOA,OAAP,yCAAOA,OAAP,OAAmB,QAAnC,EAA8C;AAC7CD,IAAAA,IAAI,qBAAOC,OAAP,CAAJ;AAEA,QAAMC,gBAAgB,GAAG;AACxBhB,MAAAA,MAAM,EAANA,MADwB;AAExBM,MAAAA,OAAO,EAAPA,OAFwB;AAGxBE,MAAAA,QAAQ,EAARA,QAHwB;AAIxBE,MAAAA,OAAO,EAAPA,OAJwB;;AAMxB;;;;AAIAO,MAAAA,SAAS,EAAE,mBAAAC,SAAS,EAAI;AACvB,YAAK,QAAOA,SAAP,MAAqB,QAA1B,EAAqC;AACpC;AACA;;AAED,YAAKA,SAAS,CAACL,QAAf,EAA0B;AACzBE,UAAAA,OAAO,CAACF,QAAR,CAAiBM,KAAjB;AACA;;AACD,YAAKD,SAAS,CAACE,SAAf,EAA2B;AAC1BL,UAAAA,OAAO,CAACK,SAAR,CAAkBF,SAAS,CAACE,SAA5B;AACA;AACD,OArBuB;;AAuBxB;;;;;AAKAP,MAAAA,QAAQ,EAAE,kBAAAM,KAAK,EAAI;AAClB,YAAK,CAAC,CAACnB,MAAD,EAASE,MAAT,EAAiBE,OAAjB,EAA0BE,OAA1B,EAAmCE,QAAnC,EAA6CE,OAA7C,EAAsDW,IAAtD,CAA2D,UAAAC,CAAC;AAAA,iBAAIA,CAAC,KAAKH,KAAV;AAAA,SAA5D,CAAN,EAAqF;AACpF;AACAJ,UAAAA,OAAO,CAACQ,KAAR,CAAc,yBAAd;AACA;AACA;;AAEDZ,QAAAA,MAAM,CAACE,QAAP,GAAkBM,KAAlB;AACA,OApCuB;;AAsCxB;;;;;AAKAK,MAAAA,aAAa,EAAE,uBAAAC,GAAG,EAAI;AACrB,YAAKA,GAAG,KAAK,CAAC,CAACA,GAAf,EAAqB;AACpB;AACAV,UAAAA,OAAO,CAACQ,KAAR,CAAc,6DAAd;AACA;AACA;;AAEDZ,QAAAA,MAAM,CAACC,UAAP,GAAoBa,GAApB;AACA,OAnDuB;;AAqDxB;;;;AAIAC,MAAAA,SAAS,EAAE,mBAACC,CAAD,EAAO;AACjB,YAAK,OAAOA,CAAP,KAAa,QAAb,IAAyBC,QAAQ,CAACD,CAAD,CAAR,KAAgBA,CAA9C,EAAkD;AACjDA,UAAAA,CAAC,GAAG,CAAJ;AACA;;AAED,aAAM,IAAIE,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAACF,CAAjB,EAAoBE,CAAC,EAArB,EAA0B;AACzBf,UAAAA,IAAI,CAACgB,GAAL,CAAS,EAAT;AACA;AACD,OAjEuB;;AAmExB;;;;AAIAC,MAAAA,KAAK,EAAE,iBAAa;AAAA;;AAAA,0CAATC,IAAS;AAATA,UAAAA,IAAS;AAAA;;AACnB,YAAKrB,MAAM,CAACE,QAAP,GAAkBb,MAAvB,EAAgC;AAC/B;AACA;;AAED,YAAKW,MAAM,CAACC,UAAZ,EAAyB;AACxBoB,UAAAA,IAAI,IACH,MAAM,IAAIC,IAAJ,GAAWC,cAAX,EAAN,GAAoC,GADjC,4BAEAF,IAFA,EAAJ;AAIA;;AAED,eAAO,SAAAlB,IAAI,EAACgB,GAAL,iCAAYE,IAAZ,EAAP;AACA,OApFuB;;AAsFxB;;;;AAIAF,MAAAA,GAAG,EAAE,eAAa;AAAA;;AAAA,2CAATE,IAAS;AAATA,UAAAA,IAAS;AAAA;;AACjB,YAAKrB,MAAM,CAACE,QAAP,GAAkBX,MAAvB,EAAgC;AAC/B;AACA;;AAED,YAAKS,MAAM,CAACC,UAAZ,EAAyB;AACxBoB,UAAAA,IAAI,IACH,MAAM,IAAIC,IAAJ,GAAWC,cAAX,EAAN,GAAoC,GADjC,4BAEAF,IAFA,EAAJ;AAIA;;AAED,eAAO,UAAAlB,IAAI,EAACgB,GAAL,kCAAYE,IAAZ,EAAP;AACA,OAvGuB;;AAyGxB;;;;AAIAG,MAAAA,IAAI,EAAE,gBAAa;AAAA;;AAAA,2CAATH,IAAS;AAATA,UAAAA,IAAS;AAAA;;AAClB,YAAKrB,MAAM,CAACE,QAAP,GAAkBT,OAAvB,EAAiC;AAChC;AACA;;AAED,YAAKO,MAAM,CAACC,UAAZ,EAAyB;AACxBoB,UAAAA,IAAI,IACH,MAAM,IAAIC,IAAJ,GAAWC,cAAX,EAAN,GAAoC,GADjC,4BAEAF,IAFA,EAAJ;AAIA;;AAED,eAAO,UAAAlB,IAAI,EAACqB,IAAL,kCAAaH,IAAb,EAAP;AACA,OA1HuB;;AA4HxB;;;;AAIAI,MAAAA,IAAI,EAAE,gBAAa;AAAA;;AAAA,2CAATJ,IAAS;AAATA,UAAAA,IAAS;AAAA;;AAClB,YAAKrB,MAAM,CAACE,QAAP,GAAkBP,OAAvB,EAAiC;AAChC;AACA;;AAED,YAAKK,MAAM,CAACC,UAAZ,EAAyB;AACxBoB,UAAAA,IAAI,IACH,MAAM,IAAIC,IAAJ,GAAWC,cAAX,EAAN,GAAoC,GADjC,4BAEAF,IAFA,EAAJ;AAIA;;AAED,eAAO,UAAAlB,IAAI,EAACsB,IAAL,kCAAaJ,IAAb,EAAP;AACA,OA7IuB;;AA+IxB;;;;AAIAT,MAAAA,KAAK,EAAE,iBAAa;AAAA;;AAAA,2CAATS,IAAS;AAATA,UAAAA,IAAS;AAAA;;AACnB,YAAKrB,MAAM,CAACE,QAAP,GAAkBL,QAAvB,EAAkC;AACjC;AACA;;AAED,YAAKG,MAAM,CAACC,UAAZ,EAAyB;AACxBoB,UAAAA,IAAI,IACH,MAAM,IAAIC,IAAJ,GAAWC,cAAX,EAAN,GAAoC,GADjC,4BAEAF,IAFA,EAAJ;AAIA;;AAED,eAAO,UAAAlB,IAAI,EAACS,KAAL,kCAAcS,IAAd,EAAP;AACA,OAhKuB,CAmKzB;;AAnKyB,KAAzB;;AAoKA,SAAM,IAAIK,CAAV,IAAerB,gBAAf,EAAkC;AACjCD,MAAAA,OAAO,CAACsB,CAAD,CAAP,GAAarB,gBAAgB,CAACqB,CAAD,CAA7B;AACA;AACD;AACD,CAlMA,GAAD","sourcesContent":["(function() {\n\t\"use strict\";\n\n\tconst LL_0 = 0;\n\tconst LL_ALL = LL_0;\n\tconst LL_1 = 1;\n\tconst LL_LOG = LL_1;\n\tconst LL_2 = 2;\n\tconst LL_INFO = LL_2;\n\tconst LL_3 = 3;\n\tconst LL_WARN = LL_3;\n\tconst LL_4 = 4;\n\tconst LL_ERROR = LL_4;\n\tconst LL_5 = 5;\n\tconst LL_NONE = LL_5;\n\n\tlet config = {\n\t\ttimestamps: false,\n\t\tlogLevel: LL_ALL,\n\t};\n\n\tlet orig = null;\n\n\tif ( console && typeof console === 'object' ) {\n\t\torig = {...console};\n\n\t\tconst augmentedConsole = {\n\t\t\tLL_ALL,\n\t\t\tLL_WARN,\n\t\t\tLL_ERROR,\n\t\t\tLL_NONE,\n\n\t\t\t/**\n\t\t\t * Configure the console functions\n\t\t\t * @param {Object} configObj Object with the new configuration\n\t\t\t */\n\t\t\tconfigure: configObj => {\n\t\t\t\tif ( typeof configObj !== 'object' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( configObj.logLevel ) {\n\t\t\t\t\tconsole.logLevel(level);\n\t\t\t\t}\n\t\t\t\tif ( configObj.timestamp ) {\n\t\t\t\t\tconsole.timestamp(configObj.timestamp);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Set the log level of the function log, info, warn, error\n\t\t\t * @param {Number} level the new log level. Can be one of\n\t\t\t * console.LL_ALL, console.LL_WARN, console.LL_ERROR, or console.LL_NONE\n\t\t\t */\n\t\t\tlogLevel: level => {\n\t\t\t\tif ( ![LL_ALL, LL_LOG, LL_INFO, LL_WARN, LL_ERROR, LL_NONE].some(l => l === level) ) {\n\t\t\t\t\t// Invalid value\n\t\t\t\t\tconsole.error('Invalid log level value');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconfig.logLevel = level;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Set adding timestamps to the log functions\n\t\t\t * @param {Boolean} set True to add timestamps to the logs,\n\t\t\t * or false to disable timestamps\n\t\t\t */\n\t\t\taddTimestamps: set => {\n\t\t\t\tif ( set !== !!set ) {\n\t\t\t\t\t// Invalid value\n\t\t\t\t\tconsole.error('Invalid argument for console.timestamp(). Boolean expected.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconfig.timestamps = set;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Write one or more whitelines to the console\n\t\t\t * @param {Number} n Number of whitelines to write\n\t\t\t */\n\t\t\twhiteline: (n) => {\n\t\t\t\tif ( typeof n !== 'number' || parseInt(n) !== n ) {\n\t\t\t\t\tn = 1;\n\t\t\t\t}\n\n\t\t\t\tfor ( let i=0; i<n; i++ ) {\n\t\t\t\t\torig.log('');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Add another logging function\n\t\t\t * @param  {...any} args the arguments passed to the log function\n\t\t\t */\n\t\t\tdebug: (...args) => {\n\t\t\t\tif ( config.logLevel > LL_ALL ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.log(...args);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the default log function\n\t\t\t * @param  {...any} args the arguments passed to the log function\n\t\t\t */\n\t\t\tlog: (...args) => {\n\t\t\t\tif ( config.logLevel > LL_LOG ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.log(...args);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the info function\n\t\t\t * @param  {...any} args the arguments passed to the log function\n\t\t\t */\n\t\t\tinfo: (...args) => {\n\t\t\t\tif ( config.logLevel > LL_INFO ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.info(...args);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the warn function\n\t\t\t * @param  {...any} args the arguments passed to the warn function\n\t\t\t */\n\t\t\twarn: (...args) => {\n\t\t\t\tif ( config.logLevel > LL_WARN ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.warn(...args);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enhance the error function\n\t\t\t * @param  {...any} args the arguments passed to the error function\n\t\t\t */\n\t\t\terror: (...args) => {\n\t\t\t\tif ( config.logLevel > LL_ERROR ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( config.timestamps ) {\n\t\t\t\t\targs = [\n\t\t\t\t\t\t'[' + new Date().toLocaleString() + ']',\n\t\t\t\t\t\t...args,\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn orig.error(...args);\n\t\t\t},\n\t\t}\n\n\t\t// Overwrite the console object with our updates\n\t\tfor ( let k in augmentedConsole ) {\n\t\t\tconsole[k] = augmentedConsole[k];\n\t\t}\n\t}\n}());\n"],"file":"main.js"}